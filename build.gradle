import org.gradle.internal.jvm.Jvm

buildscript {
    ext {
        // SDK
        sdkCompileVersion = 29
        sdkMinVersion = 24
        sdkTargetVersion = 29

        // Android jetpack
        archLifecycleVersion = "2.1.0"
        roomVersion = "2.4.0-alpha03"
        appCompat = "1.3.1"
        sqliteVersion = "2.1.0"
        lifecycleLiveData = "2.3.1"
        biometricVersion="1.0.1"

        // Kotlin
        kotlinVersion = "1.5.30"
        coroutinesVersion = "1.5.1"

        // Koin
        koinVersion = '2.2.3'

        // Testing
        mockkVersion = '1.12.0'
        junitVersion = "4.13.2"
        extJunitVersion = '1.1.3'
        androidTestVersion = '1.3.0'
        espressoTestVersion = '3.4.0'
        fragmentTestVersion = "1.1.0"
        uiAutomatorTestVersion = "2.2.0"
        annotationTestVersion = "1.2.0"

        // Extensions
        ktxVersion = "1.1.0"

        // KTX extensions
        ktxCoreVersion = "1.6.0"
        ktxViewModelVersion = "2.3.1"
        ktxFragmentVersion = "1.3.6"
        ktxLiveData = "2.1.0"
    }

    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.1.0"
    }
}

plugins {
    id "org.sonarqube" version "3.3"
}

println "Gradle uses Java ${Jvm.current()}"

ext {
    androidX = '1.0.0'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url "https://jitpack.io"
        }
        maven {
            url 'https://artifactory.mxtracks.info/artifactory/gradle-dev-local/'
        }
    }
}

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: 'org.sonarqube'
}

sonarqube {
    properties {
        property "sonar.projectKey", "owncloud_android"
        property "sonar.organization", "owncloud-1"
        property "sonar.projectVersion", getBranchName()
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

def getBranchName() {
    def name = "git rev-parse --abbrev-ref HEAD".execute()
    return name.text.toString().trim()
}
